{"ast":null,"code":"import { createFeatureSelector, createSelector, createReducer, on } from '@ngrx/store';\nimport * as fromActions from '../actions/article.actions';\nimport { JAVA_ARTICLES, ANGULAR_ARTICLES, MINS_ARTICLES } from '../models/article';\nexport const initialState = {\n  articles: []\n};\n\nconst _articleReducer = createReducer(initialState, on(fromActions.JavaArticlesAction, state => {\n  return {\n    articles: JAVA_ARTICLES\n  };\n}), on(fromActions.AngularArticlesAction, state => {\n  return {\n    articles: ANGULAR_ARTICLES\n  };\n}), on(fromActions.MinsArticlesAction, state => {\n  return {\n    articles: MINS_ARTICLES\n  };\n}), on(fromActions.FavoriteArticlesAction, (state, {\n  payload\n}) => {\n  return {\n    articles: payload\n  };\n}), on(fromActions.AddArticleAction, (state, {\n  payload\n}) => {\n  state.articles.push(payload);\n  return {\n    articles: state.articles\n  };\n}), on(fromActions.DeleteArticleAction, (state, {\n  payload\n}) => {\n  const _articles = state.articles.filter(o => o.id != payload);\n\n  return {\n    articles: _articles\n  };\n}), on(fromActions.UpdateArticleAction, (state, {\n  payload\n}) => {\n  const _articles = state.articles;\n\n  if (payload[0] == payload[1].id) {\n    const _article = _articles.find(o => o.id == payload[0]);\n\n    state.articles[state.articles.indexOf(_article)] = payload[1];\n  }\n\n  return {\n    articles: state.articles\n  };\n}));\n\nexport function articleReducer(state, action) {\n  return _articleReducer(state, action);\n}\n;\nexport const getArticleState = createFeatureSelector('articleState');\nexport const getArticles = createSelector(getArticleState, state => state.articles);","map":null,"metadata":{},"sourceType":"module"}