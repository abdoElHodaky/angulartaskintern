{"ast":null,"code":"import { createFeatureSelector, createSelector, createReducer, on } from '@ngrx/store'; //import { Ticket } from 'src/models/suptickets';\n\nimport * as fromActions from '../actions/tickets.actions';\nexport const initialState = {\n  tickets: [],\n  message: \"\"\n};\nlet tickets = [];\n\nconst _ticketReducer = createReducer(initialState, on(fromActions.CreateSupTicketAction, (state, {\n  payload\n}) => {\n  //tickets.push(payload)\n  return Object.assign(Object.assign({}, state), {\n    tickets: []\n  });\n}), on(fromActions.CreateSupTicketFailedAction, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    message: \"created falied\"\n  });\n}), on(fromActions.LoadSupTicketsAction, state => {\n  return Object.assign(Object.assign({}, state), {\n    tickets: []\n  });\n}), on(fromActions.LoadSupTicketSuccessAction, (state, {\n  payload\n}) => {\n  return Object.assign(Object.assign({}, state), {\n    tickets: [...payload]\n  });\n}));\n\nexport function ticketReducer(state, action) {\n  return _ticketReducer(state, action);\n}\n;\nexport const getSpTicketState = createFeatureSelector('ticketState');\nexport const getTickets = createSelector(getSpTicketState, state => state.tickets);\nexport const _getTickets = createSelector(getSpTicketState, state => tickets);\nexport const getMessage = createSelector(getSpTicketState, state => state.message);","map":null,"metadata":{},"sourceType":"module"}