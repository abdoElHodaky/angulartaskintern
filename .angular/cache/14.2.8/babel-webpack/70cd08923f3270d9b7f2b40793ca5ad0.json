{"ast":null,"code":"import { createFeatureSelector, createSelector, createReducer, on } from '@ngrx/store';\nimport * as fromActions from '../actions/user.actions';\nexport const initialState = {\n  users: []\n};\n\nconst _userReducer = createReducer(initialState, on(fromActions.AddUserAction, (state, {\n  payload\n}) => {\n  state.users.push(payload);\n  return {\n    users: state.users\n  };\n}), on(fromActions.DeleteUserAction, (state, {\n  payload\n}) => {\n  const _users = state.users.filter(o => o.id != payload);\n\n  return {\n    users: _users\n  };\n}), on(fromActions.UpdateUserAction, (state, {\n  payload\n}) => {\n  const _users = state.users;\n\n  if (payload[0] == payload[1].id) {\n    const _user = _users.find(o => o.id == payload[0]);\n\n    state.users[state.users.indexOf(_user)] = payload[1];\n  }\n\n  return {\n    users: state.users\n  };\n}));\n\nexport function userReducer(state, action) {\n  return _userReducer(state, action);\n}\n;\nexport const getUserState = createFeatureSelector('userState');\nexport const getUsers = createSelector(getUserState, state => state.users);","map":null,"metadata":{},"sourceType":"module"}