{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { map, switchMap, debounceTime } from 'rxjs/operators';\nimport * as fromActions from '../actions/user.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/users.service\";\nexport let UserEffects = /*#__PURE__*/(() => {\n  class UserEffects {\n    constructor(actions$, Usererv) {\n      this.actions$ = actions$;\n      this.Usererv = Usererv;\n      this.loadUsers$ = createEffect(() => this.actions$.pipe(ofType(fromActions.LoadAllUserAction), debounceTime(100), switchMap(() => this.Usererv.getAllUsers().pipe(map(res => fromActions.LoadAllUserSuccessAction({\n        payload: res\n      }))))));\n      this.loadUser$ = createEffect(() => this.actions$.pipe(ofType(fromActions.LoadUserAction), debounceTime(1000), map(action => action.payload), switchMap(payload => this.Usererv.getOneUser(payload).pipe(map(res => fromActions.LoadUserSuccessAction({\n        payload: res\n      }))))));\n    }\n\n  }\n\n  UserEffects.ɵfac = function UserEffects_Factory(t) {\n    return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UsersService));\n  };\n\n  UserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserEffects,\n    factory: UserEffects.ɵfac\n  });\n  return UserEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}