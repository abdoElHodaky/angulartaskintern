{"ast":null,"code":"import * as ticketReducer from '../reducers/tickets.reducer';\nimport * as fromActions from '../actions/tickets.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nexport let TicketsFacade = /*#__PURE__*/(() => {\n  class TicketsFacade {\n    //selectedCar$ = this.store.select(carsQuery.getSelectedCar);\n    constructor(store) {\n      this.store = store; //loaded$ = this.store.select(carsQuery.getIsLoaded);\n\n      this.tickets$ = this.store.select(ticketReducer.getTickets) || this.store.select(ticketReducer._getTickets);\n      this.message$ = this.store.select(ticketReducer.getMessage);\n    } // FromJson(param){Ticket.fromJson(param)}\n\n\n    AddSpTicket(param1, param2) {\n      let payload = {\n        userid: param2,\n        ticket: param1\n      };\n      this.store.dispatch(fromActions.CreateSupTicketAction({\n        payload: payload\n      }));\n    }\n    /*DeleteSpTicket(param:number):void {\r\n        this.store.dispatch(fromActions.DeleteSupTicketAction({payload:param}));\r\n         }*/\n\n\n    getAllspTickets() {\n      this.store.dispatch(fromActions.LoadSupTicketsAction());\n    }\n\n  }\n\n  TicketsFacade.ɵfac = function TicketsFacade_Factory(t) {\n    return new (t || TicketsFacade)(i0.ɵɵinject(i1.Store));\n  };\n\n  TicketsFacade.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TicketsFacade,\n    factory: TicketsFacade.ɵfac,\n    providedIn: \"root\"\n  });\n  return TicketsFacade;\n})();","map":null,"metadata":{},"sourceType":"module"}